name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    env:
      NEXT_PUBLIC_E2E: '1'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci || npm i
      - run: npm run lint
      - run: npm run typecheck
      - run: npx playwright install --with-deps
      - run: npm run test
      - name: Extract coverage percent (frontend)
        run: |
          PCT=$(grep -Eo 'Lines.*: *[0-9]+(\.[0-9]+)?%' coverage/lcov-report/index.html | head -n1 | grep -Eo '[0-9]+(\.[0-9]+)?')
          echo "${PCT:-0}" > coverage/percent.txt
      - run: npm run e2e
      - run: npm run build
      - name: Upload unit coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: coverage
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report

  api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: api/package-lock.json
      - run: npm ci || npm i
      - run: npm run lint
      - run: npm run typecheck
      - run: npm run test
      - run: npm run build
      - name: Upload API coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-coverage
          path: coverage

  pages:
    name: Publish coverage to GitHub Pages
    runs-on: ubuntu-latest
    needs: [frontend, api]
    steps:
      - uses: actions/configure-pages@v5

      - name: Download frontend unit coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: site/frontend-coverage

      - name: Download Playwright report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: site/tmp-playwright-report

      - name: Download API coverage
        uses: actions/download-artifact@v4
        with:
          name: api-coverage
          path: site/api-coverage

      - name: Promote Playwright report and update latest
        run: |
          BRANCH="${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}"
          RUN="${GITHUB_RUN_ID}"
          DEST="site/reports/${BRANCH}/${RUN}/playwright-report"
          mkdir -p "${DEST}"
          rsync -a site/tmp-playwright-report/ "${DEST}/"
          LATEST_DIR="site/reports/${BRANCH}/latest"
          rm -rf "${LATEST_DIR}"
          mkdir -p "${LATEST_DIR}"
          cat > "${LATEST_DIR}/index.html" <<HTML
          <!doctype html><meta http-equiv="refresh" content="0; url=../${RUN}/playwright-report/">
          HTML

      - name: Build shields endpoint (coverage)
        run: |
          PCT="0"
          if [ -f site/frontend-coverage/percent.txt ]; then
            PCT=$(cat site/frontend-coverage/percent.txt)
          fi
          if awk "BEGIN{exit !(${PCT}>=90)}"; then COLOR="brightgreen"; \
          elif awk "BEGIN{exit !(${PCT}>=80)}"; then COLOR="green"; \
          elif awk "BEGIN{exit !(${PCT}>=70)}"; then COLOR="yellowgreen"; \
          elif awk "BEGIN{exit !(${PCT}>=60)}"; then COLOR="yellow"; \
          elif awk "BEGIN{exit !(${PCT}>=50)}"; then COLOR="orange"; \
          else COLOR="red"; fi
          mkdir -p site/badges
          cat > site/badges/coverage.json <<JSON
          { "schemaVersion": 1, "label": "coverage", "message": "${PCT}%", "color": "${COLOR}" }
          JSON

      - name: Create hub index.html
        run: |
          cat > site/index.html <<'HTML'
          <!doctype html>
          <html>
          <head>
            <meta charset="utf-8"/>
            <title>CarrierScope – Test Reports</title>
            <style>
              body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial,sans-serif;max-width:900px;margin:40px auto;padding:0 16px;line-height:1.5}
              a{color:#0b72e7;text-decoration:none}
              .card{border:1px solid #e5e7eb;border-radius:8px;padding:12px;margin:12px 0}
            </style>
          </head>
          <body>
            <h1>CarrierScope — Test Reports</h1>
            <div class="card">
              <h2>Frontend</h2>
              <ul>
                <li><a href="./frontend-coverage/index.html">Vitest coverage</a></li>
                <li><a href="./reports/main/latest/">Playwright report — latest (main)</a></li>
              </ul>
            </div>
            <div class="card">
              <h2>API</h2>
              <ul>
                <li><a href="./api-coverage/index.html">Vitest coverage</a></li>
              </ul>
            </div>
          </body>
          </html>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4